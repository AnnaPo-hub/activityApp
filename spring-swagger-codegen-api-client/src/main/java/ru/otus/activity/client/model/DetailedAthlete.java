/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.otus.activity.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;
import ru.otus.activity.client.model.SummaryClub;
import ru.otus.activity.client.model.SummaryGear;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * DetailedAthlete
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-10-31T23:26:10.837+03:00")
public class DetailedAthlete {
    @JsonProperty("id")
    private Long id = null;

    @JsonProperty("resource_state")
    private Integer resourceState = null;

    @JsonProperty("firstname")
    private String firstname = null;

    @JsonProperty("lastname")
    private String lastname = null;

    @JsonProperty("profile_medium")
    private String profileMedium = null;

    @JsonProperty("profile")
    private String profile = null;

    @JsonProperty("city")
    private String city = null;

    @JsonProperty("state")
    private String state = null;

    @JsonProperty("country")
    private String country = null;
    @JsonProperty("sex")
    private SexEnum sex = null;
    @JsonProperty("premium")
    private Boolean premium = null;
    @JsonProperty("summit")
    private Boolean summit = null;
    @JsonProperty("created_at")
    private DateTime createdAt = null;
    @JsonProperty("updated_at")
    private DateTime updatedAt = null;
    @JsonProperty("follower_count")
    private Integer followerCount = null;
    @JsonProperty("friend_count")
    private Integer friendCount = null;
    @JsonProperty("measurement_preference")
    private MeasurementPreferenceEnum measurementPreference = null;
    @JsonProperty("ftp")
    private Integer ftp = null;
    @JsonProperty("weight")
    private Float weight = null;
    @JsonProperty("clubs")
    private List<SummaryClub> clubs = null;
    @JsonProperty("bikes")
    private List<SummaryGear> bikes = null;
    @JsonProperty("shoes")
    private List<SummaryGear> shoes = null;

    public DetailedAthlete id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * The unique identifier of the athlete
     *
     * @return id
     **/
    @ApiModelProperty(value = "The unique identifier of the athlete")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public DetailedAthlete resourceState(Integer resourceState) {
        this.resourceState = resourceState;
        return this;
    }

    /**
     * Resource state, indicates level of detail. Possible values: 1 -&gt; \&quot;meta\&quot;, 2 -&gt; \&quot;summary\&quot;, 3 -&gt; \&quot;detail\&quot;
     *
     * @return resourceState
     **/
    @ApiModelProperty(value = "Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\"")
    public Integer getResourceState() {
        return resourceState;
    }

    public void setResourceState(Integer resourceState) {
        this.resourceState = resourceState;
    }

    public DetailedAthlete firstname(String firstname) {
        this.firstname = firstname;
        return this;
    }

    /**
     * The athlete&#39;s first name.
     *
     * @return firstname
     **/
    @ApiModelProperty(value = "The athlete's first name.")
    public String getFirstname() {
        return firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public DetailedAthlete lastname(String lastname) {
        this.lastname = lastname;
        return this;
    }

    /**
     * The athlete&#39;s last name.
     *
     * @return lastname
     **/
    @ApiModelProperty(value = "The athlete's last name.")
    public String getLastname() {
        return lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    public DetailedAthlete profileMedium(String profileMedium) {
        this.profileMedium = profileMedium;
        return this;
    }

    /**
     * URL to a 62x62 pixel profile picture.
     *
     * @return profileMedium
     **/
    @ApiModelProperty(value = "URL to a 62x62 pixel profile picture.")
    public String getProfileMedium() {
        return profileMedium;
    }

    public void setProfileMedium(String profileMedium) {
        this.profileMedium = profileMedium;
    }

    public DetailedAthlete profile(String profile) {
        this.profile = profile;
        return this;
    }

    /**
     * URL to a 124x124 pixel profile picture.
     *
     * @return profile
     **/
    @ApiModelProperty(value = "URL to a 124x124 pixel profile picture.")
    public String getProfile() {
        return profile;
    }

    public void setProfile(String profile) {
        this.profile = profile;
    }

    public DetailedAthlete city(String city) {
        this.city = city;
        return this;
    }

    /**
     * The athlete&#39;s city.
     *
     * @return city
     **/
    @ApiModelProperty(value = "The athlete's city.")
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public DetailedAthlete state(String state) {
        this.state = state;
        return this;
    }

    /**
     * The athlete&#39;s state or geographical region.
     *
     * @return state
     **/
    @ApiModelProperty(value = "The athlete's state or geographical region.")
    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public DetailedAthlete country(String country) {
        this.country = country;
        return this;
    }

    /**
     * The athlete&#39;s country.
     *
     * @return country
     **/
    @ApiModelProperty(value = "The athlete's country.")
    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public DetailedAthlete sex(SexEnum sex) {
        this.sex = sex;
        return this;
    }

    /**
     * The athlete&#39;s sex.
     *
     * @return sex
     **/
    @ApiModelProperty(value = "The athlete's sex.")
    public SexEnum getSex() {
        return sex;
    }

    public void setSex(SexEnum sex) {
        this.sex = sex;
    }

    public DetailedAthlete premium(Boolean premium) {
        this.premium = premium;
        return this;
    }

    /**
     * Deprecated.  Use summit field instead. Whether the athlete has any Summit subscription.
     *
     * @return premium
     **/
    @ApiModelProperty(value = "Deprecated.  Use summit field instead. Whether the athlete has any Summit subscription.")
    public Boolean getPremium() {
        return premium;
    }

    public void setPremium(Boolean premium) {
        this.premium = premium;
    }

    public DetailedAthlete summit(Boolean summit) {
        this.summit = summit;
        return this;
    }

    /**
     * Whether the athlete has any Summit subscription.
     *
     * @return summit
     **/
    @ApiModelProperty(value = "Whether the athlete has any Summit subscription.")
    public Boolean getSummit() {
        return summit;
    }

    public void setSummit(Boolean summit) {
        this.summit = summit;
    }

    public DetailedAthlete createdAt(DateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * The time at which the athlete was created.
     *
     * @return createdAt
     **/
    @ApiModelProperty(value = "The time at which the athlete was created.")
    public DateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(DateTime createdAt) {
        this.createdAt = createdAt;
    }

    public DetailedAthlete updatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * The time at which the athlete was last updated.
     *
     * @return updatedAt
     **/
    @ApiModelProperty(value = "The time at which the athlete was last updated.")
    public DateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public DetailedAthlete followerCount(Integer followerCount) {
        this.followerCount = followerCount;
        return this;
    }

    /**
     * The athlete&#39;s follower count.
     *
     * @return followerCount
     **/
    @ApiModelProperty(value = "The athlete's follower count.")
    public Integer getFollowerCount() {
        return followerCount;
    }

    public void setFollowerCount(Integer followerCount) {
        this.followerCount = followerCount;
    }

    public DetailedAthlete friendCount(Integer friendCount) {
        this.friendCount = friendCount;
        return this;
    }

    /**
     * The athlete&#39;s friend count.
     *
     * @return friendCount
     **/
    @ApiModelProperty(value = "The athlete's friend count.")
    public Integer getFriendCount() {
        return friendCount;
    }

    public void setFriendCount(Integer friendCount) {
        this.friendCount = friendCount;
    }

    public DetailedAthlete measurementPreference(MeasurementPreferenceEnum measurementPreference) {
        this.measurementPreference = measurementPreference;
        return this;
    }

    /**
     * The athlete&#39;s preferred unit system.
     *
     * @return measurementPreference
     **/
    @ApiModelProperty(value = "The athlete's preferred unit system.")
    public MeasurementPreferenceEnum getMeasurementPreference() {
        return measurementPreference;
    }

    public void setMeasurementPreference(MeasurementPreferenceEnum measurementPreference) {
        this.measurementPreference = measurementPreference;
    }

    public DetailedAthlete ftp(Integer ftp) {
        this.ftp = ftp;
        return this;
    }

    /**
     * The athlete&#39;s FTP (Functional Threshold Power).
     *
     * @return ftp
     **/
    @ApiModelProperty(value = "The athlete's FTP (Functional Threshold Power).")
    public Integer getFtp() {
        return ftp;
    }

    public void setFtp(Integer ftp) {
        this.ftp = ftp;
    }

    public DetailedAthlete weight(Float weight) {
        this.weight = weight;
        return this;
    }

    /**
     * The athlete&#39;s weight.
     *
     * @return weight
     **/
    @ApiModelProperty(value = "The athlete's weight.")
    public Float getWeight() {
        return weight;
    }

    public void setWeight(Float weight) {
        this.weight = weight;
    }

    public DetailedAthlete clubs(List<SummaryClub> clubs) {
        this.clubs = clubs;
        return this;
    }

    public DetailedAthlete addClubsItem(SummaryClub clubsItem) {
        if (this.clubs == null) {
            this.clubs = new ArrayList<SummaryClub>();
        }
        this.clubs.add(clubsItem);
        return this;
    }

    /**
     * The athlete&#39;s clubs.
     *
     * @return clubs
     **/
    @ApiModelProperty(value = "The athlete's clubs.")
    public List<SummaryClub> getClubs() {
        return clubs;
    }

    public void setClubs(List<SummaryClub> clubs) {
        this.clubs = clubs;
    }

    public DetailedAthlete bikes(List<SummaryGear> bikes) {
        this.bikes = bikes;
        return this;
    }

    public DetailedAthlete addBikesItem(SummaryGear bikesItem) {
        if (this.bikes == null) {
            this.bikes = new ArrayList<SummaryGear>();
        }
        this.bikes.add(bikesItem);
        return this;
    }

    /**
     * The athlete&#39;s bikes.
     *
     * @return bikes
     **/
    @ApiModelProperty(value = "The athlete's bikes.")
    public List<SummaryGear> getBikes() {
        return bikes;
    }

    public void setBikes(List<SummaryGear> bikes) {
        this.bikes = bikes;
    }

    public DetailedAthlete shoes(List<SummaryGear> shoes) {
        this.shoes = shoes;
        return this;
    }

    public DetailedAthlete addShoesItem(SummaryGear shoesItem) {
        if (this.shoes == null) {
            this.shoes = new ArrayList<SummaryGear>();
        }
        this.shoes.add(shoesItem);
        return this;
    }

    /**
     * The athlete&#39;s shoes.
     *
     * @return shoes
     **/
    @ApiModelProperty(value = "The athlete's shoes.")
    public List<SummaryGear> getShoes() {
        return shoes;
    }

    public void setShoes(List<SummaryGear> shoes) {
        this.shoes = shoes;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DetailedAthlete detailedAthlete = (DetailedAthlete) o;
        return Objects.equals(this.id, detailedAthlete.id) &&
                Objects.equals(this.resourceState, detailedAthlete.resourceState) &&
                Objects.equals(this.firstname, detailedAthlete.firstname) &&
                Objects.equals(this.lastname, detailedAthlete.lastname) &&
                Objects.equals(this.profileMedium, detailedAthlete.profileMedium) &&
                Objects.equals(this.profile, detailedAthlete.profile) &&
                Objects.equals(this.city, detailedAthlete.city) &&
                Objects.equals(this.state, detailedAthlete.state) &&
                Objects.equals(this.country, detailedAthlete.country) &&
                Objects.equals(this.sex, detailedAthlete.sex) &&
                Objects.equals(this.premium, detailedAthlete.premium) &&
                Objects.equals(this.summit, detailedAthlete.summit) &&
                Objects.equals(this.createdAt, detailedAthlete.createdAt) &&
                Objects.equals(this.updatedAt, detailedAthlete.updatedAt) &&
                Objects.equals(this.followerCount, detailedAthlete.followerCount) &&
                Objects.equals(this.friendCount, detailedAthlete.friendCount) &&
                Objects.equals(this.measurementPreference, detailedAthlete.measurementPreference) &&
                Objects.equals(this.ftp, detailedAthlete.ftp) &&
                Objects.equals(this.weight, detailedAthlete.weight) &&
                Objects.equals(this.clubs, detailedAthlete.clubs) &&
                Objects.equals(this.bikes, detailedAthlete.bikes) &&
                Objects.equals(this.shoes, detailedAthlete.shoes);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, resourceState, firstname, lastname, profileMedium, profile, city, state, country, sex, premium, summit, createdAt, updatedAt, followerCount, friendCount, measurementPreference, ftp, weight, clubs, bikes, shoes);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DetailedAthlete {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    resourceState: ").append(toIndentedString(resourceState)).append("\n");
        sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
        sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
        sb.append("    profileMedium: ").append(toIndentedString(profileMedium)).append("\n");
        sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    sex: ").append(toIndentedString(sex)).append("\n");
        sb.append("    premium: ").append(toIndentedString(premium)).append("\n");
        sb.append("    summit: ").append(toIndentedString(summit)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    followerCount: ").append(toIndentedString(followerCount)).append("\n");
        sb.append("    friendCount: ").append(toIndentedString(friendCount)).append("\n");
        sb.append("    measurementPreference: ").append(toIndentedString(measurementPreference)).append("\n");
        sb.append("    ftp: ").append(toIndentedString(ftp)).append("\n");
        sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
        sb.append("    clubs: ").append(toIndentedString(clubs)).append("\n");
        sb.append("    bikes: ").append(toIndentedString(bikes)).append("\n");
        sb.append("    shoes: ").append(toIndentedString(shoes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    /**
     * The athlete&#39;s sex.
     */
    public enum SexEnum {
        M("M"),

        F("F");

        private String value;

        SexEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static SexEnum fromValue(String text) {
            for (SexEnum b : SexEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

    /**
     * The athlete&#39;s preferred unit system.
     */
    public enum MeasurementPreferenceEnum {
        FEET("feet"),

        METERS("meters");

        private String value;

        MeasurementPreferenceEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static MeasurementPreferenceEnum fromValue(String text) {
            for (MeasurementPreferenceEnum b : MeasurementPreferenceEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

}

